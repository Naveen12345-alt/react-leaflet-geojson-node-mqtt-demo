"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _MQTTSubscriber = _interopRequireDefault(require("./MQTTSubscriber"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var parse = function parse(message) {
  try {
    return JSON.parse(message);
  } catch (e) {
    return message.toString();
  }
};

function defaultDispatch() {
  var storeData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  return function (topic, message, packet) {
    var state = this.state;
    var m = parse(message);
    var newData = storeData ? [m].concat(_toConsumableArray(state.data)) : [m];
    this.setState({
      data: newData
    });
  };
}

var _default = function _default(opts) {
  return function (TargetComponent) {
    var topic = opts.topic,
        dispatch = opts.dispatch,
        _opts$storeData = opts.storeData,
        storeData = _opts$storeData === void 0 ? true : _opts$storeData;
    var dispatcher = dispatch ? dispatch : defaultDispatch(storeData);
    return (0, _MQTTSubscriber.default)(topic, dispatcher, TargetComponent);
  };
};

exports.default = _default;